@page "/auth-example"
@using Hurudza.UI.Web.Cookie.Providers
@using Hurudza.UI.Web.Components

@inject AuthenticationStateProvider AuthStateProvider

<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0">
                    <h6>Permission-Based UI AuthExample</h6>
                </div>
                <div class="card-body">
                    <h5>Current User Information</h5>
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <p><strong>Name:</strong> @UserFullName</p>
                        </div>
                        <div class="col-md-4">
                            <p><strong>Role:</strong> @UserRole</p>
                        </div>
                        <div class="col-md-4">
                            <p><strong>Active Farm:</strong> @ActiveFarmId</p>
                        </div>
                    </div>

                    <h5>Permission Checks</h5>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6>Farm Management</h6>
                                </div>
                                <div class="card-body">
                                    <ul class="list-group">
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Create Farm
                                            @if (HasPermission(Claims.FarmCreate))
                                            {
                                                <span class="badge bg-success">Allowed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Not Allowed</span>
                                            }
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            View Farm
                                            @if (HasPermission(Claims.FarmView))
                                            {
                                                <span class="badge bg-success">Allowed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Not Allowed</span>
                                            }
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Edit Farm
                                            @if (HasPermission(Claims.FarmUpdate))
                                            {
                                                <span class="badge bg-success">Allowed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Not Allowed</span>
                                            }
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Delete Farm
                                            @if (HasPermission(Claims.FarmDelete))
                                            {
                                                <span class="badge bg-success">Allowed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Not Allowed</span>
                                            }
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6>User Management</h6>
                                </div>
                                <div class="card-body">
                                    <ul class="list-group">
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Create User
                                            @if (HasPermission(Claims.UserCreate))
                                            {
                                                <span class="badge bg-success">Allowed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Not Allowed</span>
                                            }
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            View User
                                            @if (HasPermission(Claims.UserView))
                                            {
                                                <span class="badge bg-success">Allowed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Not Allowed</span>
                                            }
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Edit User
                                            @if (HasPermission(Claims.UserUpdate))
                                            {
                                                <span class="badge bg-success">Allowed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Not Allowed</span>
                                            }
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Delete User
                                            @if (HasPermission(Claims.UserDelete))
                                            {
                                                <span class="badge bg-success">Allowed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Not Allowed</span>
                                            }
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-4">
                        <div class="col-12">
                            <h5>Permission-Based UI Elements</h5>
                            
                            <!-- Using PermissionCheck Component -->
                            <PermissionCheck Permission="@Claims.FarmCreate">
                                <div class="alert alert-success">
                                    <i class="fa fa-check-circle me-2"></i>
                                    You can create new farms!
                                </div>
                            </PermissionCheck>
                            
                            <PermissionCheck AnyPermission="@(new[] { Claims.UserManage, Claims.FarmManage })">
                                <div class="alert alert-info">
                                    <i class="fa fa-info-circle me-2"></i>
                                    You have management permissions!
                                </div>
                            </PermissionCheck>
                            
                            <PermissionCheck AllPermissions="@(new[] { Claims.UserDelete, Claims.FarmDelete })">
                                <div class="alert alert-warning">
                                    <i class="fa fa-exclamation-triangle me-2"></i>
                                    You have delete permissions for both users and farms!
                                </div>
                            </PermissionCheck>
                            
                            <!-- Check using direct methods -->
                            @if (_authProvider.UserHasPermission(Claims.UserCreate))
                            {
                                <button class="btn btn-success me-2">
                                    <i class="fa fa-user-plus me-2"></i>
                                    Add New User
                                </button>
                            }
                            
                            @if (_authProvider.UserHasPermission(Claims.FarmCreate))
                            {
                                <button class="btn btn-primary me-2">
                                    <i class="fa fa-plus-circle me-2"></i>
                                    Add New Farm
                                </button>
                            }
                            
                            @if (_authProvider.UserHasAnyPermission(Claims.UserDelete, Claims.FarmDelete))
                            {
                                <button class="btn btn-danger">
                                    <i class="fa fa-trash me-2"></i>
                                    Delete Items
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private CustomAuthStateProvider _authProvider;
    private string UserFullName = "";
    private string UserRole = "";
    private string ActiveFarmId = "";
    private ClaimsPrincipal _user;

    protected override async Task OnInitializedAsync()
    {
        _authProvider = AuthStateProvider as CustomAuthStateProvider;
        if (_authProvider != null)
        {
            var authState = await _authProvider.GetAuthenticationStateAsync();
            _user = authState.User;
            
            UserFullName = _user.Identity?.Name ?? "Unknown";
            UserRole = _authProvider.GetUserRole();
            ActiveFarmId = _authProvider.GetCurrentFarmId();
        }
    }

    private bool HasPermission(string permission)
    {
        return _authProvider?.UserHasPermission(permission) ?? false;
    }
}